/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Medical;
import Business.Organization.Organization;
import Business.Person.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DiagnosticsWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author chandrasekhar
 */
public class TestDataJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    UserAccount userAccount;
    String id;
    Patient patient;
    String assist;
    Enterprise enterprise;
    Medical organization;
    EcoSystem ecosystem;
    Network network;
    /**
     * Creates new form TestDataJPanel
     */
    public TestDataJPanel(JPanel userProcessContainer, UserAccount userAccount, String id,Patient patient,String assist,Enterprise enterprise,Medical organization, EcoSystem ecosystem,Network network) {
        initComponents();
        this.userAccount=userAccount;
        this.userProcessContainer=userProcessContainer;
        this.id=id;
        this.patient=patient;
        this.assist=assist;
        this.enterprise=enterprise;
        this.organization=organization;
        this.ecosystem=ecosystem;
        this.network=network;
        txtArea_chandu.setText(populatevalues());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea_chandu = new javax.swing.JTextArea();

        jButton1.setText("Okay");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        jLabel4.setText("Test Report");

        txtArea_chandu.setEditable(false);
        txtArea_chandu.setColumns(20);
        txtArea_chandu.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        txtArea_chandu.setRows(5);
        jScrollPane1.setViewportView(txtArea_chandu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(191, 191, 191))
        );
    }// </editor-fold>//GEN-END:initComponents

    public String populatevalues(){
        String test="            ******************** TEST RESULTS ***********************\n";
        test+="\nPatient ID : "+id+"\n";
        test+="\nPatient Name : "+patient.getName()+"\n";
        test+="\nLab Assistant :"+assist+"\n";
        test+="**************************************************";
        
        
        for(int i=0;i<userAccount.getWorkQueue().getWorkRequestList().size();i++){
            if(userAccount.getWorkQueue().getWorkRequestList().get(i) instanceof DiagnosticsWorkRequest){
                if((""+((DiagnosticsWorkRequest) userAccount.getWorkQueue().getWorkRequestList().get(i)).getPatient().getId()).equalsIgnoreCase(id)){
                    for(int j=0;j<((DiagnosticsWorkRequest) userAccount.getWorkQueue().getWorkRequestList().get(i)).getTests().size();j++){
                        test+="\n"+((DiagnosticsWorkRequest) userAccount.getWorkQueue().getWorkRequestList().get(i)).getTests().get(j) +" : "+((DiagnosticsWorkRequest) userAccount.getWorkQueue().getWorkRequestList().get(i)).getTestData().get(j)+"\n";
                    }
                }
            }
        
        }
        
        
        /*for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if (request instanceof DiagnosticsWorkRequest){            
                if((""+((DiagnosticsWorkRequest) request).getPatient().getId()).equalsIgnoreCase(id)){
                    System.out.println(((DiagnosticsWorkRequest) request).getTests());
                    System.out.println(((DiagnosticsWorkRequest) request).getTestData());
                    
                    
                    
                    
                    
                    /*if(!((DiagnosticsWorkRequest) request).getTestData().get(0).equalsIgnoreCase("-")){
                        test+="\nBlood Typing : "+((DiagnosticsWorkRequest) request).getTestData().get(0)+"\n";    
                    }
                    if(!((DiagnosticsWorkRequest) request).getTestData().get(1).equalsIgnoreCase("-")){
                        test+="\nBlood Typing : "+((DiagnosticsWorkRequest) request).getTestData().get(0)+"\n";
                    }
                    if(!((DiagnosticsWorkRequest) request).getTestData().get(2).equalsIgnoreCase("-")){
                        test+="\nAntibodies : "+((DiagnosticsWorkRequest) request).getTestData().get(2)+"\n";
                    }
                    if(!((DiagnosticsWorkRequest) request).getTestData().get(3).equalsIgnoreCase("-")){
                        test+="\nWBC Count : "+((DiagnosticsWorkRequest) request).getTestData().get(3)+"\n";
                    }
                    if(!((DiagnosticsWorkRequest) request).getTestData().get(4).equalsIgnoreCase("-")){
                        test+="\nLiver Culture : "+((DiagnosticsWorkRequest) request).getTestData().get(4)+"\n";
                    }
                    if(!((DiagnosticsWorkRequest) request).getTestData().get(5).equalsIgnoreCase("-")){
                        test+="\nKidney Culture : "+((DiagnosticsWorkRequest) request).getTestData().get(5)+"\n";
                    }
                    if(!((DiagnosticsWorkRequest) request).getTestData().get(6).equalsIgnoreCase("-")){
                        test+="\n"+((DiagnosticsWorkRequest) request).getTests().get(6) +" : "+((DiagnosticsWorkRequest) request).getTestData().get(6)+"\n";
                    }
                    if(!((DiagnosticsWorkRequest) request).getTestData().get(7).equalsIgnoreCase("-")){
                        test+="\n"+((DiagnosticsWorkRequest) request).getTests().get(7) +" : "+((DiagnosticsWorkRequest) request).getTestData().get(7)+"\n";
                    }
                    if(!((DiagnosticsWorkRequest) request).getTestData().get(8).equalsIgnoreCase("-")){
                        test+="\n"+((DiagnosticsWorkRequest) request).getTests().get(8) +" : "+((DiagnosticsWorkRequest) request).getTestData().get(8)+"\n";
                        
                        
                    }
                }
            }
        }*/
    return test;
    }
   
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DoctorWorkAreaJPanel sa=new DoctorWorkAreaJPanel(userProcessContainer,userAccount,organization,enterprise,ecosystem,network);
        userProcessContainer.add("Customer Adding",sa);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtArea_chandu;
    // End of variables declaration//GEN-END:variables
}
