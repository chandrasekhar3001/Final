/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.Diagnostics;
import Business.Organization.Medical;
import Business.Organization.Organization;
import Business.Person.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DiagnosticsWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author raunak
 */
public class RequestLabTestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Patient patientAccount;
    private Medical organization;
    EcoSystem ecosystem;
    Network network;
    //private DiagnosticsWorkRequest testRequest;
    /**
     * Creates new form RequestLabTestJPanel
     */
    public RequestLabTestJPanel(JPanel userProcessContainer, UserAccount account, Patient patientAccount, Enterprise enterprise,Medical organization, EcoSystem ecosystem, Network network) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.patientAccount=patientAccount;
        this.organization=organization;
        this.ecosystem=ecosystem;
        this.network=network;
         requestTestJButton.setEnabled(true);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestTestJButton = new javax.swing.JButton();
        messageJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        lbl_addtest1 = new javax.swing.JLabel();
        reactive = new javax.swing.JCheckBox();
        bloodtyping = new javax.swing.JCheckBox();
        survivalcapability = new javax.swing.JCheckBox();
        txt_addtest1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        wbcCount = new javax.swing.JCheckBox();
        liverCulture = new javax.swing.JCheckBox();
        kidneyCulture = new javax.swing.JCheckBox();
        lbl_addtest2 = new javax.swing.JLabel();
        txt_addTest2 = new javax.swing.JTextField();
        lbl_addTest3 = new javax.swing.JLabel();
        txt_addtest3 = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        requestTestJButton.setBackground(new java.awt.Color(0, 51, 102));
        requestTestJButton.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        requestTestJButton.setForeground(new java.awt.Color(255, 255, 255));
        requestTestJButton.setText("Request Tests");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });

        messageJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageJTextFieldActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(0, 51, 102));
        backJButton.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("Previous");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        lbl_addtest1.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        lbl_addtest1.setText("Additional test");

        reactive.setBackground(new java.awt.Color(255, 255, 255));
        reactive.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        reactive.setText("Reactive Antibodies ");
        reactive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reactiveActionPerformed(evt);
            }
        });

        bloodtyping.setBackground(new java.awt.Color(255, 255, 255));
        bloodtyping.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        bloodtyping.setText("Blood Typing");

        survivalcapability.setBackground(new java.awt.Color(255, 255, 255));
        survivalcapability.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        survivalcapability.setText("Survival Capability");

        txt_addtest1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_addtest1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel4.setText("Comments");

        jLabel5.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("REQUEST TEST ");

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Frequent Tests Conducted");

        wbcCount.setBackground(new java.awt.Color(255, 255, 255));
        wbcCount.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        wbcCount.setText("WBC Count");
        wbcCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wbcCountActionPerformed(evt);
            }
        });

        liverCulture.setBackground(new java.awt.Color(255, 255, 255));
        liverCulture.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        liverCulture.setText("Liver Culture");

        kidneyCulture.setBackground(new java.awt.Color(255, 255, 255));
        kidneyCulture.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        kidneyCulture.setText("Kidney Culture");
        kidneyCulture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kidneyCultureActionPerformed(evt);
            }
        });

        lbl_addtest2.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        lbl_addtest2.setText("Additional test");

        txt_addTest2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_addTest2ActionPerformed(evt);
            }
        });

        lbl_addTest3.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        lbl_addTest3.setText("Additional test");

        txt_addtest3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_addtest3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 1640, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(requestTestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addGap(80, 80, 80)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addGap(55, 55, 55)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lbl_addTest3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_addtest3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_addtest2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_addTest2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_addtest1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_addtest1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bloodtyping)
                            .addComponent(reactive, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(survivalcapability, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(wbcCount)
                            .addComponent(liverCulture)
                            .addComponent(kidneyCulture)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addComponent(bloodtyping)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(survivalcapability)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(reactive)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(wbcCount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(liverCulture)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kidneyCulture)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_addtest1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_addtest1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_addTest2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_addtest2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_addtest3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_addTest3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backJButton)
                    .addComponent(requestTestJButton))
                .addGap(60, 60, 60))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
        
        String message = messageJTextField.getText();
        //String pname = txtAge.getText();
        //String pid = pidText.getText();
        int f=0;
     
        
        DiagnosticsWorkRequest request = new DiagnosticsWorkRequest();
        request.setPatientAccount(patientAccount);
        
        if(message==null||message.equals("")){
            JOptionPane.showMessageDialog(null, "please fill the comments field");
            
            return;
        }
        request.setMessage(message);
      //  request.setSender(us);
       // request.setPatient_Name(pname);
        //request.setPatient_id(pid);
        if(bloodtyping.isSelected()){
               f=1;
            request.getTests().add("Blood Typing");
        }
        if(survivalcapability.isSelected()){
            f=1;
            request.getTests().add("Survival Capability");
        }
        if(reactive.isSelected()){
            f=1;
            request.getTests().add("Reactive Antibodies");
        }
        if(wbcCount.isSelected()){
            f=1;
            request.getTests().add("WBC Count");
        }
        if(liverCulture.isSelected()){
            f=1;
            request.getTests().add("Liver Culture");
        }
        if(kidneyCulture.isSelected()){
            f=1;
            request.getTests().add("Kidney Culture");
        }
        if(!txt_addtest1.getText().isEmpty()){
            f=1;
            request.getTests().add(txt_addtest1.getText());
        }
        if(!txt_addTest2.getText().isEmpty()){
            f=1;
            request.getTests().add(txt_addTest2.getText());
        }if(!txt_addtest3.getText().isEmpty()){
            f=1;
            request.getTests().add(txt_addtest3.getText());
        }
        
        request.setSender(userAccount);
        request.setStatus("Sent");
        
        Organization org = null;
        //System.out.println(enterprise.getOrganizationDirectory().getOrganizationList()+"yay");
        Enterprise e=null;
        
        for(Enterprise ent: network.getEnterpriseDirectory().getEnterpriseList()){
            if(ent instanceof HospitalEnterprise&&ent.getName().equalsIgnoreCase(enterprise.getName())){
                e=ent;
                ent.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
            }
        }
        
        
        /*for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof Diagnostics){
                org = organization;
                System.out.println(org+" and work request"+org.getWorkQueue().getWorkRequestList());
                org.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
                break;
            }
        }*/
        /*JOptionPane.showMessageDialog(null, org.getName());
        if (org!=null){
            
            System.out.println(org+" and work request"+org.getWorkQueue().getWorkRequestList());
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        }*/
        
        if(f==0){
            JOptionPane.showMessageDialog(null, "Please fill the details");
        }else{
        JOptionPane.showMessageDialog(null, "Test requested");
        patientAccount.setAlive(false);// to not repeat patient
        requestTestJButton.setEnabled(false);}
        
        DoctorWorkAreaJPanel sa=new DoctorWorkAreaJPanel(userProcessContainer,userAccount,organization,enterprise,ecosystem,network);
        userProcessContainer.add("Customer Adding",sa);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        
        /*userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DoctorWorkAreaJPanel dwjp = (DoctorWorkAreaJPanel) component;
        //dwjp.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);*/
        
        
        DoctorWorkAreaJPanel sa=new DoctorWorkAreaJPanel(userProcessContainer,userAccount,organization,enterprise,ecosystem,network);
        userProcessContainer.add("Customer Adding",sa);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_backJButtonActionPerformed

    private void txt_addtest1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_addtest1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_addtest1ActionPerformed

    private void reactiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reactiveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reactiveActionPerformed

    private void messageJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageJTextFieldActionPerformed

    private void wbcCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wbcCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wbcCountActionPerformed

    private void kidneyCultureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kidneyCultureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kidneyCultureActionPerformed

    private void txt_addTest2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_addTest2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_addTest2ActionPerformed

    private void txt_addtest3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_addtest3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_addtest3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JCheckBox bloodtyping;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JCheckBox kidneyCulture;
    private javax.swing.JLabel lbl_addTest3;
    private javax.swing.JLabel lbl_addtest1;
    private javax.swing.JLabel lbl_addtest2;
    private javax.swing.JCheckBox liverCulture;
    private javax.swing.JTextField messageJTextField;
    private javax.swing.JCheckBox reactive;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JCheckBox survivalcapability;
    private javax.swing.JTextField txt_addTest2;
    private javax.swing.JTextField txt_addtest1;
    private javax.swing.JTextField txt_addtest3;
    private javax.swing.JCheckBox wbcCount;
    // End of variables declaration//GEN-END:variables
}
