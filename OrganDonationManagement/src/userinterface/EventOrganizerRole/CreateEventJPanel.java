/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EventOrganizerRole;

import Business.EcoSystem;
import Business.Network.Network;
import Business.Enterprise.Enterprise;
import Business.Organization.*;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EventWorkRequest;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author saras
 */
public class CreateEventJPanel extends javax.swing.JPanel {
        private JPanel userProcessContainer;
    private  AwarnessCampaign organization;
    private Enterprise enterprise;
        private UserAccount userAccount;
        private EcoSystem system;
    /**
     * Creates new form CreateEventJPanel
     */
    public CreateEventJPanel(JPanel userProcessContainer,UserAccount userAccount,Enterprise enterprise,EcoSystem ecosystem) {
       initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.system = ecosystem;
     //   valueLabel.setText(enterprise.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEventName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtVenue = new javax.swing.JTextField();
        txtDate = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtHours = new javax.swing.JTextField();
        txtMInutes = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        enterpriseLabel.setFont(new java.awt.Font("Cambria", 2, 18)); // NOI18N
        enterpriseLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        enterpriseLabel.setText("EnterPrise :");
        jPanel1.add(enterpriseLabel);
        enterpriseLabel.setBounds(10, 61, 120, 30);

        valueLabel.setFont(new java.awt.Font("Cambria", 2, 18)); // NOI18N
        valueLabel.setText("<value>");
        jPanel1.add(valueLabel);
        valueLabel.setBounds(136, 65, 386, 22);

        jLabel2.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Event Name:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(430, 100, 130, 22);

        txtEventName.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jPanel1.add(txtEventName);
        txtEventName.setBounds(570, 100, 191, 28);

        jLabel3.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Venue:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(330, 140, 233, 22);

        txtVenue.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        txtVenue.setText(" ");
        jPanel1.add(txtVenue);
        txtVenue.setBounds(570, 140, 191, 28);
        jPanel1.add(txtDate);
        txtDate.setBounds(570, 170, 191, 20);

        jLabel4.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Date:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(460, 160, 98, 22);

        jLabel5.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Time:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(480, 200, 86, 22);

        txtHours.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        txtHours.setText("hh");
        jPanel1.add(txtHours);
        txtHours.setBounds(570, 200, 71, 28);

        txtMInutes.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        txtMInutes.setText("mm");
        jPanel1.add(txtMInutes);
        txtMInutes.setBounds(670, 200, 90, 24);

        jLabel6.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("CREATE NEW EVENTS");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(-80, 30, 1406, 29);

        jLabel1.setText(":");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(650, 210, 20, 14);

        btnCreate.setText("CreateButton");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        jPanel1.add(btnCreate);
        btnCreate.setBounds(600, 250, 97, 23);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack);
        btnBack.setBounds(480, 250, 55, 23);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
                .addGap(232, 232, 232))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        String message = txtEventName.getText();
        String venue = txtVenue.getText();
        Date d = (txtDate.getDate());
        String t = txtHours.getText()+":"+txtMInutes.getText();
        //System.out.println(message);
        EventWorkRequest request = new EventWorkRequest();
        request = (EventWorkRequest) request;
        request.setMessage(message);
        request.setVenue(venue);
        request.setDate(d);
        request.setTime(t);
        request.setStatus("Assigned");
        if(message.equals("")){
            JOptionPane.showMessageDialog(null, "Event Name can't be empty");
            return;
        }
        if(venue.equals("")){
            JOptionPane.showMessageDialog(null, "Venue can't be empty");
            return;
        }
        int hrs=0;
        int min=0;
        try{
            hrs = Integer.parseInt(txtHours.getText());
            min = Integer.parseInt(txtMInutes.getText());
        }catch(Exception e){
         JOptionPane.showMessageDialog(null, "Please enter only numbers");
         return;
        }
        if(hrs<0 || hrs >=24){
             JOptionPane.showMessageDialog(null, "Hours Should be between 0-23");
             return;
        }
         if(min<0 || min >=60){
             JOptionPane.showMessageDialog(null, "Minutes Should be between 0-60");
             return;
        }
        //((EventWorkRequest) request).setVenue(venueField.getText());
        //row[1] = request.getReceiver();
        //row[2] = ((EventWorkRequest) request).getDate();
        //String result = ((EventWorkRequest) request).getTestResult();
        //row[3] =((EventWorkRequest) request).getTime();
        request.setSender(userAccount);
        //request.setStatus("Sent");
        if(userAccount.getWorkQueue()==null){
            WorkQueue wq = new WorkQueue();
                 userAccount.setWorkQueue(wq);
        }
        userAccount.getWorkQueue().getWorkRequestList().add(request);
        //organization.getWorkQueue().getWorkRequestList().add(request);
        Organization org = null;
        // System.out.println("Inside Organ Work Request");
        for(Network network:system.getNetworkList()){
            //System.out.println(network);
        for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList()){
        for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList()){
         //organization.getWorkQueue().getWorkRequestList().add(request);
         System.out.println("Siva"+organization.getName());
         if(organization instanceof PoliciesAndFinance){
         System.out.println("sai"+organization.getName()); 
         for (UserAccount ua :organization.getUserAccountDirectory().getUserAccountList()){
                 
                if(organization instanceof PoliciesAndFinance){
                    
                   /* if(ua.getWorkQueue()== null);{
    WorkQueue wq = new WorkQueue();
  // WorkRequest wr = new WorkRequest();
     //EventWorkRequest e = new EventWorkRequest();
    //wq.getWorkRequestList();
    ua.setWorkQueue(wq);
    wq.getWorkRequestList().add(request);
    //userAccount.getWorkQueue().getWorkRequestList().add(e);
}*/        if(ua.getWorkQueue()== null){
                 WorkQueue wq = new WorkQueue();
                 ua.setWorkQueue(wq);}
                // wq.getWorkRequestList().add(request);}
                    
         ua.getWorkQueue().getWorkRequestList().add(request);
         request.setReceiver(ua);
                break;} }
                    if (organization instanceof AwarnessCampaign) {
                        System.out.println("To know ORg "+organization);
                        org= organization;
                        // System.out.print(organization.getWorkQueue());
                        break;
                    }
                }

            }
        }

        //        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            //            System.out.println(organization);
            //            if (organization instanceof OrganTissueDonationOrganization) {
                //
                //                org = organization;
                //                break;
                //            }
            //        }
        if (org != null) {
            // OrganTissueDonationOrganization org1 = (OrganTissueDonationOrganization) org;
            //WorkQueue wq = new WorkQueue();
           // org.setWorkQueue(wq);
          //  org.getWorkQueue().getWorkRequestList().add(request);--
            //userAccount.setWorkQueue(wq);
           //userAccount.getWorkQueue().getWorkRequestList().add(request);
            //System.out.println(org+" and work request"+org.getWorkQueue().getWorkRequestList());
            //System.out.println("User work request and work request"+userAccount.getWorkQueue().getWorkRequestList().toString());

            // System.out.println();
            // System.out,
            //System.out.println("Organization Work Queue--------- ");
            //System.out.println(org.getWorkQueue().getWorkRequestList());
           /* for (WorkRequest request1 : org.getWorkQueue().getWorkRequestList()){
                System.err.println("organ work request"+request.toString());
            }*/

                   }}
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        EventOrganizerWorkAreaJPanel eowajp = (EventOrganizerWorkAreaJPanel ) component;
        eowajp.populateRequestTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JTextField txtEventName;
    private javax.swing.JTextField txtHours;
    private javax.swing.JTextField txtMInutes;
    private javax.swing.JTextField txtVenue;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
