/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.LabAssistantRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Diagnostics;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DiagnosticsWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author mruna
 */
public class DiagnosticsWorkArea extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private Diagnostics diagnostics;
    private Enterprise enterprise;

    public DiagnosticsWorkArea(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business,Enterprise enterprise) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.enterprise=enterprise;
        this.diagnostics = (Diagnostics) organization;
       

        initWorktable();

    }

    public void initWorktable() {
        DefaultTableModel model = (DefaultTableModel) tbl_workReq.getModel();
        model.setRowCount(0);
        for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[6];
            row[1] = ((DiagnosticsWorkRequest) request).getPatient().getName();
            row[2] = request.getSender().getEmployee().getName();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            row[0] = request;
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_workReq = new javax.swing.JTable();
        btn_assign = new javax.swing.JButton();
        btn_process = new javax.swing.JButton();
        btn_refresh = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1200, 800));
        setPreferredSize(new java.awt.Dimension(1200, 800));

        tbl_workReq.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        tbl_workReq.setForeground(new java.awt.Color(153, 51, 0));
        tbl_workReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Patient Name", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_workReq.setSelectionBackground(new java.awt.Color(255, 153, 153));
        tbl_workReq.setSelectionForeground(new java.awt.Color(255, 255, 51));
        jScrollPane1.setViewportView(tbl_workReq);
        if (tbl_workReq.getColumnModel().getColumnCount() > 0) {
            tbl_workReq.getColumnModel().getColumn(0).setResizable(false);
            tbl_workReq.getColumnModel().getColumn(1).setResizable(false);
            tbl_workReq.getColumnModel().getColumn(2).setResizable(false);
            tbl_workReq.getColumnModel().getColumn(3).setResizable(false);
            tbl_workReq.getColumnModel().getColumn(4).setResizable(false);
        }

        btn_assign.setBackground(new java.awt.Color(0, 102, 153));
        btn_assign.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btn_assign.setForeground(new java.awt.Color(255, 255, 255));
        btn_assign.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/assign.png"))); // NOI18N
        btn_assign.setText("Assign me");
        btn_assign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_assignActionPerformed(evt);
            }
        });

        btn_process.setBackground(new java.awt.Color(0, 102, 153));
        btn_process.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btn_process.setForeground(new java.awt.Color(255, 255, 255));
        btn_process.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/process_24px.png"))); // NOI18N
        btn_process.setText("Process");
        btn_process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_processActionPerformed(evt);
            }
        });

        btn_refresh.setBackground(new java.awt.Color(0, 102, 153));
        btn_refresh.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btn_refresh.setForeground(new java.awt.Color(255, 255, 255));
        btn_refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/refresh_24px.png"))); // NOI18N
        btn_refresh.setText("Refresh");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("DIAGNOSTICS DASHBOARD");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(530, 530, 530)
                                .addComponent(btn_assign, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_process, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_refresh)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(396, 396, 396)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(597, 597, 597))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_assign, btn_process});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel5)
                .addGap(49, 49, 49)
                .addComponent(btn_refresh)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_process)
                    .addComponent(btn_assign))
                .addGap(520, 520, 520))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn_assign, btn_process, btn_refresh});

    }// </editor-fold>//GEN-END:initComponents

    private void btn_assignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_assignActionPerformed

        int selectedRow = tbl_workReq.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please select the request to assign");
            return;
        }

        WorkRequest request = (WorkRequest) tbl_workReq.getValueAt(selectedRow, 0);
        if(request.getStatus().equalsIgnoreCase("pending")){
            JOptionPane.showMessageDialog(null,"This request is under process");
        }
        else if(request.getStatus().equalsIgnoreCase("Sent")){
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        initWorktable();
        }
    }//GEN-LAST:event_btn_assignActionPerformed

    private void btn_processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_processActionPerformed

        int selectedRow = tbl_workReq.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please select the item from the list");
            return;
        }

        DiagnosticsWorkRequest request = (DiagnosticsWorkRequest) tbl_workReq.getValueAt(selectedRow, 0);
        if(request.getStatus().equalsIgnoreCase("completed")){
            JOptionPane.showMessageDialog(null,"The request was processed ");
        }   
        else if(request.getStatus().equalsIgnoreCase("sent")){
            JOptionPane.showMessageDialog(null,"This request is not assigned to you");
        }
        else if(request.getStatus().equalsIgnoreCase("pending") && !request.getReceiver().getEmployee().getName().equals(userAccount.getEmployee().getName())){
            JOptionPane.showMessageDialog(null,"This request is in progress");
        }
        else{
        request.setStatus("Processing");

        ProcessDiagnostics processdiag = new ProcessDiagnostics(userProcessContainer, request);
            System.out.println(request.getTests()+" +++++ Tests");
        userProcessContainer.add("ProcessDiagnostics", processdiag);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btn_processActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        initWorktable();
    }//GEN-LAST:event_btn_refreshActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_assign;
    private javax.swing.JButton btn_process;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_workReq;
    // End of variables declaration//GEN-END:variables
}
